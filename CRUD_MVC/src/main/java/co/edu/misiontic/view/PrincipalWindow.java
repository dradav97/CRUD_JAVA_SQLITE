/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.misiontic.view;

import co.edu.misiontic.controller.ManageProduct;
import co.edu.misiontic.model.Product;
import co.edu.misiontic.model.persistence.ConnectionDB;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class PrincipalWindow extends javax.swing.JFrame {
    ManageProduct controller;
    

    /**
     * Creates new form PrincipalWindow
     */
    public PrincipalWindow() {
        controller =  new ManageProduct();
        initComponents();
        updateTable();
        ofTxtData();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConsult = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstConsultList = new javax.swing.JList<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRecorderName = new javax.swing.JTextField();
        txtRecorderAmount = new javax.swing.JTextField();
        txtRecorderPrice = new javax.swing.JTextField();
        cmbRecorderCategory = new javax.swing.JComboBox<>();
        btnRecorderSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtConsultName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtConsultAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtConsultPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbConsultCategory = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtConsultId = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnConsultClean = new javax.swing.JButton();
        btnConsultId = new javax.swing.JButton();

        btnConsult.setText("Consultar");
        btnConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultActionPerformed(evt);
            }
        });

        lstConsultList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstConsultList);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Nombre");

        jLabel2.setText("Cantidad");

        jLabel3.setText("Precio");

        jLabel4.setText("Categoria");

        txtRecorderName.setForeground(new java.awt.Color(153, 153, 153));
        txtRecorderName.setText("Nombre del producto");
        txtRecorderName.setToolTipText("");
        txtRecorderName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecorderNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRecorderNameFocusLost(evt);
            }
        });

        txtRecorderAmount.setForeground(new java.awt.Color(153, 153, 153));
        txtRecorderAmount.setText("Cantidad del producto");
        txtRecorderAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecorderAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRecorderAmountFocusLost(evt);
            }
        });
        txtRecorderAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecorderAmountActionPerformed(evt);
            }
        });

        txtRecorderPrice.setForeground(new java.awt.Color(153, 153, 153));
        txtRecorderPrice.setText("Precio del producto");
        txtRecorderPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecorderPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRecorderPriceFocusLost(evt);
            }
        });

        cmbRecorderCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASEO", "VIVERES" }));
        cmbRecorderCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRecorderCategoryActionPerformed(evt);
            }
        });

        btnRecorderSave.setText("Guardar");
        btnRecorderSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecorderSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cmbRecorderCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRecorderName)
                            .addComponent(txtRecorderAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(txtRecorderPrice))))
                .addContainerGap(419, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRecorderSave)
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRecorderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRecorderAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRecorderPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbRecorderCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addComponent(btnRecorderSave)
                .addGap(56, 56, 56))
        );

        btnRecorderSave.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("Registrar", jPanel1);

        jLabel5.setText("Nombre");

        jLabel6.setText("Cantidad");

        txtConsultAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultAmountActionPerformed(evt);
            }
        });

        jLabel7.setText("Precio");

        jLabel8.setText("Categoria");

        cmbConsultCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASEO", "VIVERES" }));
        cmbConsultCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbConsultCategoryActionPerformed(evt);
            }
        });

        jLabel9.setText("Id");

        txtConsultId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultIdActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Cantidad", "Categoria", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnConsultClean.setText("Limpiar");
        btnConsultClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultCleanActionPerformed(evt);
            }
        });

        btnConsultId.setText("Consultar Id");
        btnConsultId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(cmbConsultCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnConsultClean))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(22, 22, 22)
                                .addComponent(txtConsultId, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultId))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtConsultName)
                                    .addComponent(txtConsultAmount)
                                    .addComponent(txtConsultPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(126, 126, 126)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtConsultId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultId))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtConsultName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtConsultAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtConsultPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbConsultCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnConsultClean))
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Consultar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbRecorderCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRecorderCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRecorderCategoryActionPerformed

    private void btnRecorderSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecorderSaveActionPerformed
        try {
            String name = txtRecorderName.getText();
            if (!name.equals("Nombre del producto")) {
                int amount = Integer.parseInt(txtRecorderAmount.getText());
                String category = cmbRecorderCategory.getSelectedItem().toString();
                double price = Double.parseDouble(txtRecorderPrice.getText());

                
                if (controller.saveProduct(name, amount, category, price)) {
                    JOptionPane.showMessageDialog(null, "A agregado con exito el nuevo producto");
                }
                updateTable();
            }else{
                JOptionPane.showMessageDialog(null, "Ha ingresado valores no validos o hay campos vacios", "Error", 2);
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ha ingresado valores no validos o hay campos vacios", "Error", 2);
            
        }
        
    }//GEN-LAST:event_btnRecorderSaveActionPerformed

    private void txtRecorderAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecorderAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecorderAmountActionPerformed

    private void txtConsultAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultAmountActionPerformed

    private void cmbConsultCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbConsultCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbConsultCategoryActionPerformed

    private void txtConsultIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultIdActionPerformed

    private void txtRecorderNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderNameFocusGained
        
        if(txtRecorderName.getText().trim().equals("Nombre del producto")){
            txtRecorderName.setText("");
        }
        txtRecorderName.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtRecorderNameFocusGained

    private void txtRecorderNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderNameFocusLost
    
        if(txtRecorderName.getText().trim().equals("")){
            txtRecorderName.setForeground(Color.gray);
            txtRecorderName.setText("Nombre del producto");
        }
    }//GEN-LAST:event_txtRecorderNameFocusLost

    private void txtRecorderAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderAmountFocusGained
   
        if(txtRecorderAmount.getText().trim().equals("Cantidad del producto")){
            txtRecorderAmount.setText("");
        }
        txtRecorderAmount.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtRecorderAmountFocusGained

    private void txtRecorderAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderAmountFocusLost

        if(txtRecorderAmount.getText().trim().equals("")){
            txtRecorderAmount.setForeground(Color.gray);
            txtRecorderAmount.setText("Cantidad del producto");
        }
    }//GEN-LAST:event_txtRecorderAmountFocusLost

    private void txtRecorderPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderPriceFocusGained
        if(txtRecorderPrice.getText().trim().equals("Precio del producto")){
            txtRecorderPrice.setText("");
        }
        txtRecorderPrice.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtRecorderPriceFocusGained

    private void txtRecorderPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecorderPriceFocusLost
        if(txtRecorderPrice.getText().trim().equals("")){
            txtRecorderPrice.setForeground(Color.gray);
            txtRecorderPrice.setText("Precio del producto");
        }
    }//GEN-LAST:event_txtRecorderPriceFocusLost

    private void btnConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultActionPerformed
        DefaultListModel listModel = new DefaultListModel();
        ArrayList<Product> listProducts = controller.getAllProducts();
        for(Product pr: listProducts){
            listModel.addElement(pr);
        }
        lstConsultList.setModel(listModel);
        
        
        DefaultTableModel dataModel = (DefaultTableModel) jTable1.getModel();
        dataModel.setRowCount(0);
       
        for(Product pr: listProducts){
            Object row[] = {pr.getId(),pr.getName(),pr.getAmount(),pr.getCategory(),pr.getPrice()};
            dataModel.addRow(row);
        }
        jTable1.setModel(dataModel);
    }//GEN-LAST:event_btnConsultActionPerformed

    private void updateTable(){
         ArrayList<Product> listProducts = controller.getAllProducts();
        DefaultTableModel dataModel = (DefaultTableModel) jTable1.getModel();
        dataModel.setRowCount(0);
       
        for(Product pr: listProducts){
            Object row[] = {pr.getId(),pr.getName(),pr.getAmount(),pr.getCategory(),pr.getPrice()};
            dataModel.addRow(row);
        }
        jTable1.setModel(dataModel);
        
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            int id = Integer.parseInt(txtConsultId.getText());
            String name = txtConsultName.getText();
            int amount = Integer.parseInt(txtConsultAmount.getText());
            String category = cmbConsultCategory.getSelectedItem().toString();
            double price = Double.parseDouble(txtConsultPrice.getText());

            if (controller.updateProduct(id,name, amount, category, price)) {
                JOptionPane.showMessageDialog(null, "Se ha actualizado el Producto con exito ");
            }

            txtConsultId.setText("");
            txtConsultId.setEnabled(true);
            txtConsultName.setText("");
            txtConsultAmount.setText("");
            txtConsultPrice.setText("");
            updateTable();
            ofTxtData();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ha ingresado valores no validos", "Error", 2);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int id =   Integer.parseInt(txtConsultId.getText());
        int option = 0;
        option=JOptionPane.showConfirmDialog(null, "Seguro que desea eliminar este producto?","confirmacion",0);


        if (option!=1 && option!=-1) {
            controller.deleteProduct(id);
            JOptionPane.showMessageDialog(null, "Se ha eleminado con exito el producto");
        }   

        txtConsultId.setText("");
        txtConsultId.setEnabled(true);
        txtConsultName.setText("");
        txtConsultAmount.setText("");
        txtConsultPrice.setText("");
        ofTxtData();
        updateTable();
           
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConsultIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultIdActionPerformed
        try{
            int id = Integer.parseInt(txtConsultId.getText());
            DefaultTableModel dataModel = (DefaultTableModel) jTable1.getModel();
            
            Product pr = controller.getProduct(id);
            if (pr!=null) {
                dataModel.setRowCount(0);
                Object row[] = {pr.getId(),pr.getName(),pr.getAmount(),pr.getCategory(),pr.getPrice()};
                dataModel.addRow(row);

                jTable1.setModel(dataModel);
            }else{
                JOptionPane.showMessageDialog(null, "No existe el producto", "Error", 0
                );
            }
            
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ha ingresado un valor no valido", "Error", 2);
        }
    }//GEN-LAST:event_btnConsultIdActionPerformed

    private void btnConsultCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultCleanActionPerformed
        txtConsultId.setEnabled(true);
        txtConsultId.setText("");
        txtConsultName.setText("");
        txtConsultAmount.setText("");
        txtConsultPrice.setText("");
        ofTxtData();
        updateTable();
    }//GEN-LAST:event_btnConsultCleanActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int id=0;
        if(evt.getClickCount()==1){
            JTable table = (JTable) evt.getSource();
            int row = table.getSelectedRow();
            id= (int) jTable1.getValueAt(row, 0);
            
            Product product = controller.getProduct(id);
            
            txtConsultId.setText(Integer.toString(product.getId()));
            txtConsultId.setEnabled(false);
            onTxtData();
            
            txtConsultName.setText(product.getName());
            txtConsultAmount.setText(Integer.toString(product.getAmount()));
            txtConsultPrice.setText(Double.toString(product.getPrice()));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void ofTxtData(){
        txtConsultName.setEnabled(false);
        txtConsultAmount.setEnabled(false);
        txtConsultPrice.setEnabled(false);
        cmbConsultCategory.setEnabled(false);
    }
    
    private void onTxtData(){
        txtConsultName.setEnabled(true);
        txtConsultAmount.setEnabled(true);
        txtConsultPrice.setEnabled(true);
        cmbConsultCategory.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsult;
    private javax.swing.JButton btnConsultClean;
    private javax.swing.JButton btnConsultId;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRecorderSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbConsultCategory;
    private javax.swing.JComboBox<String> cmbRecorderCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> lstConsultList;
    private javax.swing.JTextField txtConsultAmount;
    private javax.swing.JTextField txtConsultId;
    private javax.swing.JTextField txtConsultName;
    private javax.swing.JTextField txtConsultPrice;
    private javax.swing.JTextField txtRecorderAmount;
    private javax.swing.JTextField txtRecorderName;
    private javax.swing.JTextField txtRecorderPrice;
    // End of variables declaration//GEN-END:variables
}
